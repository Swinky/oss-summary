<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/org/microsoft/github/data/Issue.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/microsoft/github/data/Issue.java" />
              <option name="originalContent" value="package org.microsoft.github.data;&#10;&#10;import java.util.List;&#10;import java.util.Objects;&#10;&#10;/**&#10; * Represents a GitHub issue.&#10; */&#10;public class Issue {&#10;    /** Unique issue ID */&#10;    private long id;&#10;    /** Issue number in the repository */&#10;    private int number;&#10;    /** Issue title */&#10;    private String title;&#10;    /** Issue state (open, closed) */&#10;    private String state;&#10;    /** Creation timestamp (ISO 8601) */&#10;    private String createdAt;&#10;    /** Last update timestamp (ISO 8601) */&#10;    private String updatedAt;&#10;    /** Close timestamp (ISO 8601), if closed */&#10;    private String closedAt;&#10;    /** Login of the issue author */&#10;    private String authorLogin;&#10;    /** List of assignee logins */&#10;    private List&lt;String&gt; assignees;&#10;    /** List of label names */&#10;    private List&lt;String&gt; labels;&#10;    /** Number of comments */&#10;    private int comments;&#10;    /** Issue body text */&#10;    private String body;&#10;    /** True if this issue is a pull request */&#10;    private boolean isPullRequest;&#10;&#10;    public Issue() {}&#10;&#10;    // Getters and setters&#10;    public long getId() { return id; }&#10;    public void setId(long id) { this.id = id; }&#10;    public int getNumber() { return number; }&#10;    public void setNumber(int number) { this.number = number; }&#10;    public String getTitle() { return title; }&#10;    public void setTitle(String title) { this.title = title; }&#10;    public String getState() { return state; }&#10;    public void setState(String state) { this.state = state; }&#10;    public String getCreatedAt() { return createdAt; }&#10;    public void setCreatedAt(String createdAt) { this.createdAt = createdAt; }&#10;    public String getUpdatedAt() { return updatedAt; }&#10;    public void setUpdatedAt(String updatedAt) { this.updatedAt = updatedAt; }&#10;    public String getClosedAt() { return closedAt; }&#10;    public void setClosedAt(String closedAt) { this.closedAt = closedAt; }&#10;    public String getAuthorLogin() { return authorLogin; }&#10;    public void setAuthorLogin(String authorLogin) { this.authorLogin = authorLogin; }&#10;    public List&lt;String&gt; getAssignees() { return assignees; }&#10;    public void setAssignees(List&lt;String&gt; assignees) { this.assignees = assignees; }&#10;    public List&lt;String&gt; getLabels() {&#10;        if (labels == null) {&#10;            labels = new java.util.ArrayList&lt;&gt;();&#10;        }&#10;        return labels;&#10;    }&#10;    public void setLabels(List&lt;String&gt; labels) { this.labels = labels; }&#10;    public int getComments() { return comments; }&#10;    public void setComments(int comments) { this.comments = comments; }&#10;    public String getBody() { return body; }&#10;    public void setBody(String body) { this.body = body; }&#10;    public boolean isPullRequest() { return isPullRequest; }&#10;    public void setPullRequest(boolean pullRequest) { isPullRequest = pullRequest; }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Issue{&quot; +&#10;                &quot;id=&quot; + id +&#10;                &quot;, number=&quot; + number +&#10;                &quot;, title='&quot; + title + '\'' +&#10;                &quot;, state='&quot; + state + '\'' +&#10;                &quot;, createdAt='&quot; + createdAt + '\'' +&#10;                &quot;, updatedAt='&quot; + updatedAt + '\'' +&#10;                &quot;, closedAt='&quot; + closedAt + '\'' +&#10;                &quot;, authorLogin='&quot; + authorLogin + '\'' +&#10;                &quot;, assignees=&quot; + assignees +&#10;                &quot;, labels=&quot; + labels +&#10;                &quot;, comments=&quot; + comments +&#10;                &quot;, body='&quot; + body + '\'' +&#10;                &quot;, isPullRequest=&quot; + isPullRequest +&#10;                '}';&#10;    }&#10;&#10;    @Override&#10;    public boolean equals(Object o) {&#10;        if (this == o) return true;&#10;        if (o == null || getClass() != o.getClass()) return false;&#10;        Issue issue = (Issue) o;&#10;        return id == issue.id &amp;&amp;&#10;                number == issue.number &amp;&amp;&#10;                comments == issue.comments &amp;&amp;&#10;                isPullRequest == issue.isPullRequest &amp;&amp;&#10;                Objects.equals(title, issue.title) &amp;&amp;&#10;                Objects.equals(state, issue.state) &amp;&amp;&#10;                Objects.equals(createdAt, issue.createdAt) &amp;&amp;&#10;                Objects.equals(updatedAt, issue.updatedAt) &amp;&amp;&#10;                Objects.equals(closedAt, issue.closedAt) &amp;&amp;&#10;                Objects.equals(authorLogin, issue.authorLogin) &amp;&amp;&#10;                Objects.equals(assignees, issue.assignees) &amp;&amp;&#10;                Objects.equals(labels, issue.labels) &amp;&amp;&#10;                Objects.equals(body, issue.body);&#10;    }&#10;&#10;    @Override&#10;    public int hashCode() {&#10;        return Objects.hash(id, number, title, state, createdAt, updatedAt, closedAt, authorLogin, assignees, labels, comments, body, isPullRequest);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package org.microsoft.github.data;&#10;&#10;import java.util.List;&#10;import java.util.Objects;&#10;&#10;/**&#10; * Represents a GitHub issue.&#10; */&#10;public class Issue {&#10;    /** Unique issue ID */&#10;    private long id;&#10;    /** Issue number in the repository */&#10;    private int number;&#10;    /** Issue title */&#10;    private String title;&#10;    /** Issue state (open, closed) */&#10;    private String state;&#10;    /** Creation timestamp (ISO 8601) */&#10;    private String createdAt;&#10;    /** Last update timestamp (ISO 8601) */&#10;    private String updatedAt;&#10;    /** Close timestamp (ISO 8601), if closed */&#10;    private String closedAt;&#10;    /** Login of the issue author */&#10;    private String authorLogin;&#10;    /** List of assignee logins */&#10;    private List&lt;String&gt; assignees;&#10;    /** List of label names */&#10;    private List&lt;String&gt; labels;&#10;    /** Number of comments */&#10;    private int comments;&#10;    /** Issue body text */&#10;    private String body;&#10;    /** True if this issue is a pull request */&#10;    private boolean isPullRequest;&#10;&#10;    public Issue() {}&#10;&#10;    // Getters and setters&#10;    public long getId() { return id; }&#10;    public void setId(long id) { this.id = id; }&#10;    public int getNumber() { return number; }&#10;    public void setNumber(int number) { this.number = number; }&#10;    public String getTitle() { return title; }&#10;    public void setTitle(String title) { this.title = title; }&#10;    public String getState() { return state; }&#10;    public void setState(String state) { this.state = state; }&#10;    public String getCreatedAt() { return createdAt; }&#10;    public void setCreatedAt(String createdAt) { this.createdAt = createdAt; }&#10;    public String getUpdatedAt() { return updatedAt; }&#10;    public void setUpdatedAt(String updatedAt) { this.updatedAt = updatedAt; }&#10;    public String getClosedAt() { return closedAt; }&#10;    public void setClosedAt(String closedAt) { this.closedAt = closedAt; }&#10;    public String getAuthorLogin() { return authorLogin; }&#10;    public void setAuthorLogin(String authorLogin) { this.authorLogin = authorLogin; }&#10;    public List&lt;String&gt; getAssignees() { return assignees; }&#10;    public void setAssignees(List&lt;String&gt; assignees) { this.assignees = assignees; }&#10;    public List&lt;String&gt; getLabels() {&#10;        if (labels == null) {&#10;            labels = new java.util.ArrayList&lt;&gt;();&#10;        }&#10;        return labels;&#10;    }&#10;    public void setLabels(List&lt;String&gt; labels) { this.labels = labels; }&#10;    public int getComments() { return comments; }&#10;    public void setComments(int comments) { this.comments = comments; }&#10;    public String getBody() { return body; }&#10;    public void setBody(String body) { this.body = body; }&#10;    public boolean isPullRequest() { return isPullRequest; }&#10;    public void setPullRequest(boolean pullRequest) { isPullRequest = pullRequest; }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;Issue{&quot; +&#10;                &quot;id=&quot; + id +&#10;                &quot;, number=&quot; + number +&#10;                &quot;, title='&quot; + title + '\'' +&#10;                &quot;, state='&quot; + state + '\'' +&#10;                &quot;, createdAt='&quot; + createdAt + '\'' +&#10;                &quot;, updatedAt='&quot; + updatedAt + '\'' +&#10;                &quot;, closedAt='&quot; + closedAt + '\'' +&#10;                &quot;, authorLogin='&quot; + authorLogin + '\'' +&#10;                &quot;, assignees=&quot; + assignees +&#10;                &quot;, labels=&quot; + labels +&#10;                &quot;, comments=&quot; + comments +&#10;                &quot;, body='&quot; + body + '\'' +&#10;                &quot;, isPullRequest=&quot; + isPullRequest +&#10;                '}';&#10;    }&#10;&#10;    @Override&#10;    public boolean equals(Object o) {&#10;        if (this == o) return true;&#10;        if (o == null || getClass() != o.getClass()) return false;&#10;        Issue issue = (Issue) o;&#10;        return id == issue.id &amp;&amp;&#10;                number == issue.number &amp;&amp;&#10;                comments == issue.comments &amp;&amp;&#10;                isPullRequest == issue.isPullRequest &amp;&amp;&#10;                Objects.equals(title, issue.title) &amp;&amp;&#10;                Objects.equals(state, issue.state) &amp;&amp;&#10;                Objects.equals(createdAt, issue.createdAt) &amp;&amp;&#10;                Objects.equals(updatedAt, issue.updatedAt) &amp;&amp;&#10;                Objects.equals(closedAt, issue.closedAt) &amp;&amp;&#10;                Objects.equals(authorLogin, issue.authorLogin) &amp;&amp;&#10;                Objects.equals(assignees, issue.assignees) &amp;&amp;&#10;                Objects.equals(labels, issue.labels) &amp;&amp;&#10;                Objects.equals(body, issue.body);&#10;    }&#10;&#10;    @Override&#10;    public int hashCode() {&#10;        return Objects.hash(id, number, title, state, createdAt, updatedAt, closedAt, authorLogin, assignees, labels, comments, body, isPullRequest);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/org/microsoft/github/data/PullRequest.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/org/microsoft/github/data/PullRequest.java" />
              <option name="originalContent" value="package org.microsoft.github.data;&#10;&#10;import java.util.List;&#10;import java.util.Objects;&#10;&#10;/**&#10; * Represents a GitHub pull request.&#10; */&#10;public class PullRequest {&#10;    /** Unique pull request ID */&#10;    private long id;&#10;    /** Pull request number */&#10;    private int number;&#10;    /** Pull request title */&#10;    private String title;&#10;    /** Pull request state (open, closed, merged) */&#10;    private String state;&#10;    /** Creation timestamp (ISO 8601) */&#10;    private String createdAt;&#10;    /** Last update timestamp (ISO 8601) */&#10;    private String updatedAt;&#10;    /** Close timestamp (ISO 8601), if closed */&#10;    private String closedAt;&#10;    /** Merge timestamp (ISO 8601), if merged */&#10;    private String mergedAt;&#10;    /** Login of the pull request author */&#10;    private String authorLogin;&#10;    /** List of assignee logins */&#10;    private List&lt;String&gt; assignees;&#10;    /** List of label names */&#10;    private List&lt;String&gt; labels;&#10;    /** Number of comments */&#10;    private int comments;&#10;    /** Pull request body text */&#10;    private String body;&#10;    /** Number of commits in the pull request */&#10;    private int commits;&#10;    /** Number of additions */&#10;    private int additions;&#10;    /** Number of deletions */&#10;    private int deletions;&#10;    /** Number of changed files */&#10;    private int changedFiles;&#10;&#10;    public PullRequest() {}&#10;&#10;    // Getters and setters&#10;    public long getId() { return id; }&#10;    public void setId(long id) { this.id = id; }&#10;    public int getNumber() { return number; }&#10;    public void setNumber(int number) { this.number = number; }&#10;    public String getTitle() { return title; }&#10;    public void setTitle(String title) { this.title = title; }&#10;    public String getState() { return state; }&#10;    public void setState(String state) { this.state = state; }&#10;    public String getCreatedAt() { return createdAt; }&#10;    public void setCreatedAt(String createdAt) { this.createdAt = createdAt; }&#10;    public String getUpdatedAt() { return updatedAt; }&#10;    public void setUpdatedAt(String updatedAt) { this.updatedAt = updatedAt; }&#10;    public String getClosedAt() { return closedAt; }&#10;    public void setClosedAt(String closedAt) { this.closedAt = closedAt; }&#10;    public String getMergedAt() { return mergedAt; }&#10;    public void setMergedAt(String mergedAt) { this.mergedAt = mergedAt; }&#10;    public String getAuthorLogin() { return authorLogin; }&#10;    public void setAuthorLogin(String authorLogin) { this.authorLogin = authorLogin; }&#10;    public List&lt;String&gt; getAssignees() { return assignees; }&#10;    public void setAssignees(List&lt;String&gt; assignees) { this.assignees = assignees; }&#10;    public List&lt;String&gt; getLabels() {&#10;        if (labels == null) {&#10;            labels = new java.util.ArrayList&lt;&gt;();&#10;        }&#10;        return labels;&#10;    }&#10;    public void setLabels(List&lt;String&gt; labels) { this.labels = labels; }&#10;    public int getComments() { return comments; }&#10;    public void setComments(int comments) { this.comments = comments; }&#10;    public String getBody() { return body; }&#10;    public void setBody(String body) { this.body = body; }&#10;    public int getCommits() { return commits; }&#10;    public void setCommits(int commits) { this.commits = commits; }&#10;    public int getAdditions() { return additions; }&#10;    public void setAdditions(int additions) { this.additions = additions; }&#10;    public int getDeletions() { return deletions; }&#10;    public void setDeletions(int deletions) { this.deletions = deletions; }&#10;    public int getChangedFiles() { return changedFiles; }&#10;    public void setChangedFiles(int changedFiles) { this.changedFiles = changedFiles; }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;PullRequest{&quot; +&#10;                &quot;id=&quot; + id +&#10;                &quot;, number=&quot; + number +&#10;                &quot;, title='&quot; + title + '\'' +&#10;                &quot;, state='&quot; + state + '\'' +&#10;                &quot;, createdAt='&quot; + createdAt + '\'' +&#10;                &quot;, updatedAt='&quot; + updatedAt + '\'' +&#10;                &quot;, closedAt='&quot; + closedAt + '\'' +&#10;                &quot;, mergedAt='&quot; + mergedAt + '\'' +&#10;                &quot;, authorLogin='&quot; + authorLogin + '\'' +&#10;                &quot;, assignees=&quot; + assignees +&#10;                &quot;, labels=&quot; + labels +&#10;                &quot;, comments=&quot; + comments +&#10;                &quot;, body='&quot; + body + '\'' +&#10;                &quot;, commits=&quot; + commits +&#10;                &quot;, additions=&quot; + additions +&#10;                &quot;, deletions=&quot; + deletions +&#10;                &quot;, changedFiles=&quot; + changedFiles +&#10;                '}';&#10;    }&#10;&#10;    @Override&#10;    public boolean equals(Object o) {&#10;        if (this == o) return true;&#10;        if (o == null || getClass() != o.getClass()) return false;&#10;        PullRequest that = (PullRequest) o;&#10;        return id == that.id &amp;&amp;&#10;                number == that.number &amp;&amp;&#10;                comments == that.comments &amp;&amp;&#10;                commits == that.commits &amp;&amp;&#10;                additions == that.additions &amp;&amp;&#10;                deletions == that.deletions &amp;&amp;&#10;                changedFiles == that.changedFiles &amp;&amp;&#10;                Objects.equals(title, that.title) &amp;&amp;&#10;                Objects.equals(state, that.state) &amp;&amp;&#10;                Objects.equals(createdAt, that.createdAt) &amp;&amp;&#10;                Objects.equals(updatedAt, that.updatedAt) &amp;&amp;&#10;                Objects.equals(closedAt, that.closedAt) &amp;&amp;&#10;                Objects.equals(mergedAt, that.mergedAt) &amp;&amp;&#10;                Objects.equals(authorLogin, that.authorLogin) &amp;&amp;&#10;                Objects.equals(assignees, that.assignees) &amp;&amp;&#10;                Objects.equals(labels, that.labels) &amp;&amp;&#10;                Objects.equals(body, that.body);&#10;    }&#10;&#10;    @Override&#10;    public int hashCode() {&#10;        return Objects.hash(id, number, title, state, createdAt, updatedAt, closedAt, mergedAt, authorLogin, assignees, labels, comments, body, commits, additions, deletions, changedFiles);&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package org.microsoft.github.data;&#10;&#10;import java.util.List;&#10;import java.util.Objects;&#10;&#10;/**&#10; * Represents a GitHub pull request.&#10; */&#10;public class PullRequest {&#10;    /** Unique pull request ID */&#10;    private long id;&#10;    /** Pull request number */&#10;    private int number;&#10;    /** Pull request title */&#10;    private String title;&#10;    /** Pull request state (open, closed, merged) */&#10;    private String state;&#10;    /** Creation timestamp (ISO 8601) */&#10;    private String createdAt;&#10;    /** Last update timestamp (ISO 8601) */&#10;    private String updatedAt;&#10;    /** Close timestamp (ISO 8601), if closed */&#10;    private String closedAt;&#10;    /** Merge timestamp (ISO 8601), if merged */&#10;    private String mergedAt;&#10;    /** Login of the pull request author */&#10;    private String authorLogin;&#10;    /** List of assignee logins */&#10;    private List&lt;String&gt; assignees;&#10;    /** List of label names */&#10;    private List&lt;String&gt; labels;&#10;    /** Number of comments */&#10;    private int comments;&#10;    /** Pull request body text */&#10;    private String body;&#10;    /** Number of commits in the pull request */&#10;    private int commits;&#10;    /** Number of additions */&#10;    private int additions;&#10;    /** Number of deletions */&#10;    private int deletions;&#10;    /** Number of changed files */&#10;    private int changedFiles;&#10;&#10;    public PullRequest() {}&#10;&#10;    // Getters and setters&#10;    public long getId() { return id; }&#10;    public void setId(long id) { this.id = id; }&#10;    public int getNumber() { return number; }&#10;    public void setNumber(int number) { this.number = number; }&#10;    public String getTitle() { return title; }&#10;    public void setTitle(String title) { this.title = title; }&#10;    public String getState() { return state; }&#10;    public void setState(String state) { this.state = state; }&#10;    public String getCreatedAt() { return createdAt; }&#10;    public void setCreatedAt(String createdAt) { this.createdAt = createdAt; }&#10;    public String getUpdatedAt() { return updatedAt; }&#10;    public void setUpdatedAt(String updatedAt) { this.updatedAt = updatedAt; }&#10;    public String getClosedAt() { return closedAt; }&#10;    public void setClosedAt(String closedAt) { this.closedAt = closedAt; }&#10;    public String getMergedAt() { return mergedAt; }&#10;    public void setMergedAt(String mergedAt) { this.mergedAt = mergedAt; }&#10;    public String getAuthorLogin() { return authorLogin; }&#10;    public void setAuthorLogin(String authorLogin) { this.authorLogin = authorLogin; }&#10;    public List&lt;String&gt; getAssignees() { return assignees; }&#10;    public void setAssignees(List&lt;String&gt; assignees) { this.assignees = assignees; }&#10;    public List&lt;String&gt; getLabels() {&#10;        if (labels == null) {&#10;            labels = new java.util.ArrayList&lt;&gt;();&#10;        }&#10;        return labels;&#10;    }&#10;    public void setLabels(List&lt;String&gt; labels) { this.labels = labels; }&#10;    public int getComments() { return comments; }&#10;    public void setComments(int comments) { this.comments = comments; }&#10;    public String getBody() { return body; }&#10;    public void setBody(String body) { this.body = body; }&#10;    public int getCommits() { return commits; }&#10;    public void setCommits(int commits) { this.commits = commits; }&#10;    public int getAdditions() { return additions; }&#10;    public void setAdditions(int additions) { this.additions = additions; }&#10;    public int getDeletions() { return deletions; }&#10;    public void setDeletions(int deletions) { this.deletions = deletions; }&#10;    public int getChangedFiles() { return changedFiles; }&#10;    public void setChangedFiles(int changedFiles) { this.changedFiles = changedFiles; }&#10;&#10;    @Override&#10;    public String toString() {&#10;        return &quot;PullRequest{&quot; +&#10;                &quot;id=&quot; + id +&#10;                &quot;, number=&quot; + number +&#10;                &quot;, title='&quot; + title + '\'' +&#10;                &quot;, state='&quot; + state + '\'' +&#10;                &quot;, createdAt='&quot; + createdAt + '\'' +&#10;                &quot;, updatedAt='&quot; + updatedAt + '\'' +&#10;                &quot;, closedAt='&quot; + closedAt + '\'' +&#10;                &quot;, mergedAt='&quot; + mergedAt + '\'' +&#10;                &quot;, authorLogin='&quot; + authorLogin + '\'' +&#10;                &quot;, assignees=&quot; + assignees +&#10;                &quot;, labels=&quot; + labels +&#10;                &quot;, comments=&quot; + comments +&#10;                &quot;, body='&quot; + body + '\'' +&#10;                &quot;, commits=&quot; + commits +&#10;                &quot;, additions=&quot; + additions +&#10;                &quot;, deletions=&quot; + deletions +&#10;                &quot;, changedFiles=&quot; + changedFiles +&#10;                '}';&#10;    }&#10;&#10;    @Override&#10;    public boolean equals(Object o) {&#10;        if (this == o) return true;&#10;        if (o == null || getClass() != o.getClass()) return false;&#10;        PullRequest that = (PullRequest) o;&#10;        return id == that.id &amp;&amp;&#10;                number == that.number &amp;&amp;&#10;                comments == that.comments &amp;&amp;&#10;                commits == that.commits &amp;&amp;&#10;                additions == that.additions &amp;&amp;&#10;                deletions == that.deletions &amp;&amp;&#10;                changedFiles == that.changedFiles &amp;&amp;&#10;                Objects.equals(title, that.title) &amp;&amp;&#10;                Objects.equals(state, that.state) &amp;&amp;&#10;                Objects.equals(createdAt, that.createdAt) &amp;&amp;&#10;                Objects.equals(updatedAt, that.updatedAt) &amp;&amp;&#10;                Objects.equals(closedAt, that.closedAt) &amp;&amp;&#10;                Objects.equals(mergedAt, that.mergedAt) &amp;&amp;&#10;                Objects.equals(authorLogin, that.authorLogin) &amp;&amp;&#10;                Objects.equals(assignees, that.assignees) &amp;&amp;&#10;                Objects.equals(labels, that.labels) &amp;&amp;&#10;                Objects.equals(body, that.body);&#10;    }&#10;&#10;    @Override&#10;    public int hashCode() {&#10;        return Objects.hash(id, number, title, state, createdAt, updatedAt, closedAt, mergedAt, authorLogin, assignees, labels, comments, body, commits, additions, deletions, changedFiles);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/prompts/apache/incubator-gluten.txt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/prompts/apache/incubator-gluten.txt" />
              <option name="updatedContent" value="Generate an HTML report for the repository covering the period from {startDate} to {endDate}. The report should include:&#10;&#10;1. An &quot;Overall Summary&quot; section at the top, starting with a &lt;b&gt;Generated Summary&lt;/b&gt; paragraph that concisely describes the repository's activity and highlights for the period. Follow this with:&#10;   - Total commits&#10;   - Number of PRs created/updated&#10;   - Number of bugs reported&#10;   - Types of commits (bug fix, feature, improvement, etc., inferred from PR titles)&#10;   - All items should have clickable links to the original PRs, commits, and issues.&#10;&#10;2. &quot;Important Bug Fixes&quot; section: For each bug fix PR/commit, provide a 1-2 line summary (extracted from the PR title or description) and a clickable link to the original item.&#10;&#10;3. &quot;New Features&quot; section: For each feature PR/commit, provide a 1-2 line summary (extracted from the PR title or description) and a clickable link to the original item.&#10;&#10;4. &quot;Improvements&quot; section: For each improvement PR/commit, provide a 1-2 line summary (extracted from the PR title or description) and a clickable link to the original item.&#10;&#10;5. &quot;Top Contributors&quot; section: List contributors with their profile links.&#10;&#10;The HTML &lt;title&gt; should include the repository name and the date period.&#10;&#10;Format all sections clearly, and ensure all references are clickable links to the original GitHub items." />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>